# -*- coding: utf-8 -*-
"""mnist_DL

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sLGgU-HLyMW7PKkBdS2NGhf7b_e5HK37
"""

import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np

tf.__version__

mnist = tf.keras.datasets.mnist #28x28 images of hand-writtten images 0-9
(x_train,y_train), (x_test,y_test) = mnist.load_data()
x_train = tf.keras.utils.normalize(x_train, axis=1)
x_test = tf.keras.utils.normalize(x_test, axis=1)

#model building
model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(128, activation=tf.nn.relu))
model.add(tf.keras.layers.Dense(10, activation=tf.nn.softmax))

model.compile(optimizer="adam",
              loss="sparse_categorical_crossentropy",
              metrics=["accuracy"])

model.fit(x_train,y_train,epochs=3)

val_loss, val_acc = model.evaluate(x_test,y_test)
print(val_loss)
print(val_acc)

model.save("epic_num_reader.model")

new_model = tf.keras.models.load_model('epic_num_reader.model')

predictions = new_model.predict(x_test)
#print(predictions)

INDEX = 90 
print(np.argmax(predictions[INDEX]))
plt.imshow(x_test[INDEX], cmap = plt.cm.binary) # it is actually uncolor image, used plt.cm.binary 
plt.show()